if all numbers are non negative then apply sliding window else apply hashmap



// hashmap solution below
 int lenOfLongSubarr(int arr[],  int n, int k) 
    { 
        // Complete the function
        map<int,int>mp;
        int mx=0;
        int currsum=0;
        for(int i=0;i<n;i++){
            currsum+=arr[i];
            
            if(currsum==k)mx=max(mx,i+1);
            else {
                if(mp.find(currsum-k)!=mp.end())mx=max(mx,i-mp[currsum-k]);
                
            }
         if(mp.find(currsum)==mp.end()) mp[currsum]=i; //update only if it doesn't exist in map
           // cout<<currsum<<" -> "<<i<<endl;
        }
        return mx;
    } 
